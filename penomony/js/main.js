document.addEventListener("DOMContentLoaded",()=>{class AddScriptEnd{constructor(e,t){const s=document.createElement("script");s.async=!1,s.setAttribute("src",e),document.body.insertAdjacentElement("beforeend",s),s.addEventListener("load",t||(()=>console.log("Script added successfully!!")))}}setTimeout(()=>{new AddScriptEnd("https://www.googletagmanager.com/gtag/js?id=UA-140881194-1",()=>{function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","UA-140881194-1")})},2e3),function superLazy(){let e=document.querySelectorAll("[data-lz],[data-lz-srcset],[data-bg-lz]");e.forEach(e=>e.classList.add("sleeping")),"IntersectionObserver"in window?function lazyLoad(){let t={threshold:.15};e.forEach(e=>{new IntersectionObserver((e,t)=>{e.forEach(e=>{if(e.isIntersecting){const s=e.target,n=s.getAttribute("data-bg-lz"),r=s.getAttribute("data-lz"),a=s.getAttribute("data-lz-srcset");n&&(s.style.backgroundImage=`url(${n})`),r&&s.setAttribute("src",r),a&&s.setAttribute("srcset",a),s.classList.replace("sleeping","awake"),t.disconnect()}})},t).observe(e)})}():(console.log("This browser doesn't support 'Intersection Observer'!"),window.addEventListener("scroll",()=>{e.forEach(e=>{if(e.classList.contains("sleeping")){if(e.getBoundingClientRect().top<=window.innerHeight){const t=e.getAttribute("data-bg-lz"),s=e.getAttribute("data-lz"),n=e.getAttribute("data-lz-srcset");t&&(e.style.backgroundImage=`url(${t})`),s&&e.setAttribute("src",s),n&&e.setAttribute("srcset",n),e.classList.replace("sleeping","awake")}}})}))}();new AddScriptEnd("./js/plugins/bootstrap-native.min.js"),new AddScriptEnd("./js/plugins/tiny-slider.js",()=>{tns({container:".my-slider",loop:!0,items:1,slideBy:1,navPosition:"bottom",autoplay:!0,speed:500,autoplayButtonOutput:!1,mouseDrag:!0,lazyload:!0,controls:!1,responsive:{640:{items:2},768:{items:3},1200:{items:4}}})});const e=document.querySelector(".top-nav"),t=document.querySelector(".navbar-track");if("IntersectionObserver"in window){const s={threshold:.15};(t=>{new IntersectionObserver(t=>{t.forEach(t=>{t.isIntersecting?(e.classList.replace("bg-white","bg-transparent"),e.classList.remove("shadow")):(e.classList.replace("bg-transparent","bg-white"),e.classList.add("shadow"))})},s).observe(t)})(t)}let s=0;window.addEventListener("scroll",()=>{const t=window.scrollY;t>s?e.classList.add("invisible"):e.classList.replace("invisible","visible"),s=t});let n=document.querySelectorAll(".date"),r=document.querySelectorAll(".time"),a=new Date;n.forEach(e=>{e.innerText=`${a.getDate()}/${a.getMonth()}/${a.getFullYear()}`}),r.forEach(e=>{e.innerText=`${a.toLocaleTimeString()}`}),document.querySelector(".footer-year").textContent=`${(new Date).getFullYear()}`});